# Версия docker-compose
version: '3'
# Список наших сервисов (контейнеров)
services:
  nginx:
    # используем последний стабильный образ nginx
    image: nginx:latest
    container_name: nginx
    # маршрутизируем порты
    ports:
      - "80:80"
      - "443:443"
    # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
    volumes:
      - ./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./www:/var/www
      - ./etc/ssl:/etc/ssl
      - ./logs:/var/log/nginx
    # nginx должен общаться с php контейнером
    restart: always
    depends_on:
      - php
      - mysql
  php:
    # у нас свой образ для PHP, указываем путь к нему и говорим что его надо собрать
    build: ./etc/php
    container_name: php
    restart: always
    # монтируем директорию с проектами
    volumes:
      - ./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./www:/var/www
  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
    restart: always
    depends_on:
      - mysql
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${MYSQL_HOST}
    restart: always
    env_file:
      - ".env"
    ports:
      - "3306:3306"
    volumes:
      - ./etc/mysql:/var/lib/mysql
    # задаем данные для root пользователя
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
